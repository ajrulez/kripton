	/**
	 * subject for valueFloat field
	 */
	private final Subject<Float> valueFloatSubject = BehaviorSubject.create();

	/**
	 * Obtains an observable to valueFloat property
	 * 
	 * @return
	 * 		an observable to valueFloat property
	 */
	public Observable<Float> getValueFloatAsObsevable() {
		return valueFloatSubject;
	}	
	
	/**
	 * listener for all changes
	 */
	private final OnSharedPreferenceChangeListener valueFloatListener = new OnSharedPreferenceChangeListener() {

		@Override
		public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
			switch (key) {
			case "value_float":
				valueFloatSubject.onNext(sharedPreferences.getFloat(key, defaultBean.valueFloat));
				break;
			}

		}
	};	