/*******************************************************************************
 * Copyright 2015, 2017 Francesco Benincasa (info@abubusoft.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
package com.abubusoft.kripton.processor.utils;

import java.lang.annotation.Annotation;
import java.util.logging.Logger;

import javax.annotation.processing.Messager;
import javax.tools.Diagnostic;

import com.abubusoft.kripton.processor.BaseProcessor;

public abstract class AnnotationProcessorUtilis {

	/**
	 * KRIPTON_DEBUG info about generated classes
	 * 
	 * @param annotation
	 * @param className
	 */
	public static void infoOnGeneratedClasses(Class<? extends Annotation> annotation, String packageName, String className) {
		String msg = String.format("'%s' class in package '%s' is generated by '@%s' annotation processor", className, packageName, annotation.getSimpleName());
		if (BaseProcessor.JUNIT_TEST_MODE) {
			logger.info(msg);
		}
		
		if (!BaseProcessor.JUNIT_TEST_MODE || BaseProcessor.DEBUG_MODE)
		messager.printMessage(Diagnostic.Kind.NOTE, msg);
	}

	/**
	 * logger
	 */
	static Logger logger = Logger.getGlobal();

	private static Messager messager;

	public static void init(Messager value) {
		messager = value;
	}
}
